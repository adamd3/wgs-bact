{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/adamd3/wgs-bact/master/nextflow_schema.json",
    "title": "wgs-bact pipeline parameters",
    "description": "A pipeline for processing bacterial WGS data",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(csv|tsv|txt)$",
                    "fa_icon": "fas fa-file-excel",
                    "description": "File containing SRA/ENA/GEO/DDBJ identifiers one per line to download their associated metadata and FastQ files."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.(.[a-zA-Z]{2,5})$"
                }
            }
        },
        "fetchngs_options": {
            "title": "fetchngs options",
            "type": "object",
            "description": "Options for fetching data from public archives.",
            "properties": {
                "nf_core_pipeline": {
                    "type": ["string", "null"],
                    "description": "Name of supported nf-core pipeline e.g. 'rnaseq'."
                },
                "nf_core_rnaseq_strandedness": {
                    "type": "string",
                    "default": "auto",
                    "description": "Value for 'strandedness' entry for nf-core/rnaseq."
                },
                "ena_metadata_fields": {
                    "type": ["string", "null"],
                    "description": "Comma-separated list of ENA metadata fields to fetch."
                },
                "sample_mapping_fields": {
                    "type": "string",
                    "description": "Comma-separated list of ENA metadata fields for sample mapping."
                },
                "download_method": {
                    "type": "string",
                    "default": "ftp",
                    "enum": ["aspera", "ftp", "sratools"],
                    "description": "Method to download FastQ files."
                },
                "skip_fastq_download": {
                    "type": "boolean",
                    "description": "Only download metadata and skip FastQ download."
                },
                "dbgap_key": {
                    "type": ["string", "null"],
                    "format": "file-path",
                    "description": "dbGaP repository key."
                },
                "force_sratools_download": {
                    "type": "boolean",
                    "description": "Force download using sra-tools."
                }
            }
        },
        "wgs_bact_options": {
            "title": "wgs-bact options",
            "type": "object",
            "fa_icon": "fas fa-bacterium",
            "description": "Options specific to the wgs-bact pipeline.",
            "properties": {
                "reference_genome": {
                    "type": ["string", "null"],
                    "format": "file-path",
                    "description": "Path to the reference genome file."
                },
                "fastp_args": {
                    "type": ["string", "null"],
                    "description": "Extra arguments to pass to fastp."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Enable conda for environment management."
                },
                "snippy_min_mapqual": {
                    "type": "integer",
                    "description": "Minimum mapping quality for Snippy."
                },
                "snippy_min_basequal": {
                    "type": "integer",
                    "description": "Minimum base quality for Snippy."
                },
                "snippy_min_coverage": {
                    "type": "integer",
                    "description": "Minimum coverage for Snippy."
                },
                "snippy_min_frac": {
                    "type": "integer",
                    "description": "Minimum fraction for Snippy."
                },
                "snippy_min_qual": {
                    "type": "integer",
                    "description": "Minimum quality for Snippy."
                },
                "snippy_max_soft": {
                    "type": "integer",
                    "description": "Maximum soft-clipped bases for Snippy."
                },
                "snippy_args": {
                    "type": ["string", "null"],
                    "description": "Extra arguments to pass to Snippy."
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "description": "Set the top limit for requested resources for any single job.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job."
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+""
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": ["string", "null"],
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.(.[a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "hidden": true
                },
                "hook_url": {
                    "type": ["string", "null"],
                    "description": "Incoming hook URL for messaging service",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "description": "Show all params when using ` --help`",
                    "hidden": true
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "description": "Validation of parameters in lenient mode.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/fetchngs_options"
        },
        {
            "$ref": "#/definitions/wgs_bact_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}