nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "pipeline"

    test("Force SRA-Tools Download") {

        when {
            params {
                outdir                  = "$outputDir"
                force_sratools_download = true
            }
        }

        then {
            def softwareVersions = path("$outputDir/pipeline_info/software_versions.yml").yaml
            if (softwareVersions.containsKey("Workflow")) { softwareVersions.Workflow.remove("Nextflow") }

            assertAll(
                { assert workflow.success },
                { assert snapshot(softwareVersions).match("software_versions") },
                { assert snapshot(path("$outputDir/fastq/").list()).match("fastq") },
                { assert snapshot(path("$outputDir/metadata/DRR026872.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/DRR028935.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/ERR1109373.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/ERR1160846.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/GSE214215.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR12848126.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR13191702.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR14593545.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR14709033.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR9984183.runinfo_ftp.tsv")).match("metadata") },
                { assert new File("$outputDir/metadata/GSM4907283.runinfo_ftp.tsv").exists() },
                { assert snapshot(path("$outputDir/samplesheet/id_mappings.csv"),
                                path("$outputDir/samplesheet/multiqc_config.yml")).match("samplesheet") },
                { assert new File("$outputDir/samplesheet/samplesheet.csv").exists() }
            )
        }

    }

}
