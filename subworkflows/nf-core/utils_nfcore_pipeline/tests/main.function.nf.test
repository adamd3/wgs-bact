
nextflow_function {

    name "Test Functions"
    script "../main.nf"
    config "subworkflows/nf-core/utils_nfcore_pipeline/tests/nextflow.config"
    tag "UTILS_NFCORE_PIPELINE"

    test("Test Function checkConfigProvided") {

        function "checkConfigProvided"

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }
    }

    test("Test Function workflowCitation") {

        function "workflowCitation"

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }
    }

    test("Test Function nfCoreLogo") {

        function "nfCoreLogo"

        when {
            function {
                """
                input[0] = false
                """
            }
        }

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }
    }

    test("Test Function dashedLine") {

        function "dashedLine"

        when {
            function {
                """
                input[0] = false
                """
            }
        }

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }
    }

    test("Test Function without logColours") {

        function "logColours"

        when {
            function {
                """
                input[0] = true
                """
            }
        }

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }
    }

    test("Test Function with logColours") {
        function "logColours"

        when {
            function {
                """
                input[0] = false
                """
            }
        }

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }
    }
}
